<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Landing</title>
    <link rel="stylesheet" href="/landingStyle.css"/>
</head>
<body>
    <div class="content ">
        <button id="profile-back"></button>
        <h3>User Name : <%=userName%></h3>
        <h3>E-mail : <%=email%> </h3>
    </div>
    <div id="main-div">
        <button id="profile"></button>
        
        <div class="user-appearance" id="user-appearance">
            <div id="testVideo-container">
                <video id="video-test" autoplay></video>
                <div id="btn-container">
                    <button id="mic-toggle-btn" class="mic-on"></button>
                    <button id="video-toggle-btn" class="video-on"></button>
                </div>
            </div>
            <div id="call-options">
                <button id="request-id">Get Room</button>
                
                    <div class="join-container">
                        <form action="/join-call" method="post">
                            <input type="text" class="join-ip " name="room" required placeholder="Enter RoomId" value=""/>
                            <button type="submit" id="joinCall-btn">Join</button>
                        </form>
                    </div>
            </div>
        </div>
        <h2 id="time"></h2>
    </div>
   

    <script>
        const testVideo = document.getElementById("video-test");
        let profilecnt = document.querySelector(".content")
        console.log("Video test is",testVideo);
        const mic = document.getElementById('mic-toggle-btn');
        console.log("Im mic btn",mic);

        let localStream;
        let audiotoggle;
        let videotoggle;

        async function init(){
            try {
                localStream = await navigator.mediaDevices.getUserMedia({video: true, audio: true});
                testVideo.srcObject = localStream;
                audiotoggle = localStream.getAudioTracks()[0];
                videotoggle = localStream.getVideoTracks()[0];
                console.log("local stream added");

                document.getElementById('mic-toggle-btn').classList.add(audiotoggle.enabled ? 'mic-on' : 'mic-off');
                document.getElementById('video-toggle-btn').classList.add(videotoggle.enabled ? 'video-on' : 'video-off');

            } catch(error) {
                console.log("Error fetching your media stream", error);
            }
        }

        function updateTime(){
            const timeElement = document.getElementById("time");
            console.log(timeElement)
            const now = new Date();
            const hours = String(now.getHours()).padStart(2,'0');
            const minutes = String(now.getMinutes()).padStart(2,'0');
            timeElement.innerText = `${hours}:${minutes}`;
        }

        

        document.getElementById("request-id").addEventListener('click',()=>{
            fetch('/get-roomID',{
                method: 'GET'
            })
            .then(response => {
                if(!response.ok){
                    throw new Error('network response was not OK')
                }
                return response.json();
            })
            .then(data=>{
                console.log(data.roomID);
                document.querySelector('input[name="room"]').value = data.roomID;
                alert(`Copy your roomID ${data.roomID}`);
            })
            .catch(error =>{
                alert("Error loading new ROOMID, try again later or try refreshing the page");
            })
        })

        if (mic) {
                mic.addEventListener('click', () => {
                    if (audiotoggle) {
                        audiotoggle.enabled = !audiotoggle.enabled;
                        mic.classList.toggle('mic-on', audiotoggle.enabled);
                        mic.classList.toggle('mic-off', !audiotoggle.enabled);
                    }
                });
            } else {
                console.error("Mic button not found in the DOM.");
            }

        document.getElementById("video-toggle-btn").addEventListener('click', () => {
            if(videotoggle) {
                videotoggle.enabled = !videotoggle.enabled;
                const videoToggleButton = document.getElementById('video-toggle-btn');
                videoToggleButton.classList.toggle('video-on', videotoggle.enabled);
                videoToggleButton.classList.toggle('video-off', !videotoggle.enabled);
            }
        });

        document.getElementById("profile").addEventListener('click', () => {
           profilecnt.classList.add("profile-content");
            document.getElementById("profile").style.display = "none";
        });


        document.getElementById("profile-back").addEventListener('click', () => {
            profilecnt.classList.remove("profile-content");
            document.getElementById("profile").style.display = "inline-block";
        });

        
       
        
        window.addEventListener('load', () => {
            console.log('Mic button classes:', document.getElementById('mic-toggle-btn').classList);
            console.log('Video button classes:', document.getElementById('video-toggle-btn').classList);
        });

        // window.addEventListener('beforeunload', () => {
        //     const micEnabled = audiotoggle.enabled;
        //     const videoEnabled = videotoggle.enabled;
        //     localStorage.setItem('micEnabled', micEnabled);
        //     localStorage.setItem('videoEnabled', videoEnabled);
        // });

        
        setInterval(updateTime,60000);

        updateTime();

        init();
    </script>
</body>
</html>

